{"version":3,"file":"snap.js","sourceRoot":"","sources":["../../src/targets/snap.ts"],"names":[],"mappings":"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","sourcesContent":["import { isEnvTrue, Arch, exec, replaceDefault as _replaceDefault, serializeToYaml, spawn, toLinuxArchString } from \"builder-util\"\nimport { copyFile, copyDir, copyDirUsingHardLinks, USE_HARD_LINKS } from \"builder-util/out/fs\"\nimport { outputFile, writeFile } from \"fs-extra-p\"\nimport * as path from \"path\"\nimport { SnapOptions } from \"..\"\nimport { asArray } from \"builder-util-runtime\"\nimport { Target } from \"../core\"\nimport { LinuxPackager } from \"../linuxPackager\"\nimport { LinuxTargetHelper } from \"./LinuxTargetHelper\"\nimport { createStageDir, StageDir } from \"./targetUtil\"\nimport BluebirdPromise from \"bluebird-lst\"\nimport { getSnapTemplate } from \"./tools\"\n\n// usr/share/fonts is required, cannot run otherwise\nconst unnecessaryFiles = [\n  \"usr/share/doc\",\n  \"usr/share/man\",\n  \"usr/share/icons\",\n  \"usr/share/bash-completion\",\n  \"usr/share/lintian\",\n  \"usr/share/dh-python\",\n  \"usr/share/python3\",\n\n  \"usr/lib/python*\",\n  \"usr/bin/python*\",\n]\n\n// libxss1, libasound2, gconf2 - was \"error while loading shared libraries: libXss.so.1\" on Xubuntu 16.04\nconst defaultStagePackages = [\"libasound2\", \"libgconf2-4\", \"libnotify4\", \"libnspr4\", \"libnss3\", \"libpcre3\", \"libpulse0\", \"libxss1\", \"libxtst6\"]\nconst defaultPlugs = [\"desktop\", \"desktop-legacy\", \"home\", \"x11\", \"unity7\", \"browser-support\", \"network\", \"gsettings\", \"pulseaudio\", \"opengl\"]\n\nexport default class SnapTarget extends Target {\n  readonly options: SnapOptions = {...this.packager.platformSpecificBuildOptions, ...(this.packager.config as any)[this.name]}\n\n  private isUsePrepackedSnap = true\n\n  constructor(name: string, private readonly packager: LinuxPackager, private readonly helper: LinuxTargetHelper, readonly outDir: string) {\n    super(name)\n  }\n\n  private replaceDefault(inList: Array<string> | null | undefined, defaultList: Array<string>) {\n    const result = _replaceDefault(inList, defaultList)\n    if (result !== defaultList) {\n      this.isUsePrepackedSnap = false\n    }\n    return result\n  }\n\n  async build(appOutDir: string, arch: Arch): Promise<any> {\n    const packager = this.packager\n    const appInfo = packager.appInfo\n    const options = this.options\n    const snapName = packager.executableName.toLowerCase()\n    const buildPackages = asArray(options.buildPackages)\n    const isUseDocker = process.platform !== \"linux\" || isEnvTrue(process.env.SNAP_USE_DOCKER)\n    this.isUsePrepackedSnap = arch === Arch.x64 && buildPackages.length === 0\n\n    const snap: any = {\n      name: snapName,\n      version: appInfo.version,\n      summary: options.summary || appInfo.productName,\n      description: this.helper.getDescription(options),\n      confinement: options.confinement || \"strict\",\n      grade: options.grade || \"stable\",\n      apps: {\n        [snapName]: {\n          command: `desktop-launch $SNAP/${packager.executableName}`,\n          environment: {\n            TMPDIR: \"$XDG_RUNTIME_DIR\",\n            ...options.environment,\n          },\n          plugs: this.replaceDefault(options.plugs, defaultPlugs),\n        }\n      },\n      parts: {\n        app: {\n          plugin: \"dump\",\n          \"stage-packages\": this.replaceDefault(options.stagePackages, defaultStagePackages),\n          source: isUseDocker ? \"/appOutDir\" : appOutDir,\n          after: this.replaceDefault(options.after, [\"desktop-gtk2\"]),\n        }\n      },\n    }\n\n    const wrapperFileName = `command-${packager.executableName}.wrapper`\n    if (this.isUsePrepackedSnap) {\n      delete snap.parts\n      snap.apps[snapName].command = wrapperFileName\n    }\n\n    const snapFileName = `${snap.name}_${snap.version}_${toLinuxArchString(arch)}.snap`\n    const artifactPath = path.join(this.outDir, snapFileName)\n    this.logBuilding(\"snap\", artifactPath, arch)\n\n    if (options.assumes != null) {\n      snap.assumes = asArray(options.assumes)\n    }\n\n    const stageDir = await createStageDir(this, packager, arch)\n    // snapcraft.yaml inside a snap directory\n    const snapDir = path.join(stageDir.dir, \"snap\")\n    const snapMetaDir = this.isUsePrepackedSnap ? path.join(stageDir.dir, \"meta\") : snapDir\n\n    await this.helper.icons\n    if (this.helper.maxIconPath != null) {\n      if (!this.isUsePrepackedSnap) {\n        snap.icon = \"snap/gui/icon.png\"\n      }\n      await copyFile(this.helper.maxIconPath, path.join(snapMetaDir, \"gui\", \"icon.png\"))\n    }\n\n    const hooksDir = await packager.getResource(options.hooks, \"snap-hooks\")\n    if (hooksDir != null) {\n      await copyDir(hooksDir, path.join(snapMetaDir, \"hooks\"), {\n        isUseHardLink: USE_HARD_LINKS,\n      })\n    }\n\n    const desktopFile = path.join(snapMetaDir, \"gui\", `${snap.name}.desktop`)\n    await this.helper.writeDesktopEntry(this.options, packager.executableName, desktopFile, {\n      // tslint:disable:no-invalid-template-strings\n      Icon: \"${SNAP}/meta/gui/icon.png\"\n    })\n\n    if (packager.packagerOptions.effectiveOptionComputed != null && await packager.packagerOptions.effectiveOptionComputed({snap, desktopFile})) {\n      return\n    }\n\n    const snapcraftFile = path.join(snapMetaDir, this.isUsePrepackedSnap ? \"snap.yaml\" : \"snapcraft.yaml\")\n    await outputFile(snapcraftFile, serializeToYaml(snap))\n    if (this.isUsePrepackedSnap) {\n      // noinspection SpellCheckingInspection\n      await writeFile(path.join(stageDir.dir, wrapperFileName), `#!/bin/sh\nexport PATH=\"$SNAP/usr/sbin:$SNAP/usr/bin:$SNAP/sbin:$SNAP/bin:$PATH\"\nexport LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:$SNAP/lib:$SNAP/usr/lib:$SNAP/lib/x86_64-linux-gnu:$SNAP/usr/lib/x86_64-linux-gnu\"\nexport LD_LIBRARY_PATH=\"$SNAP/usr/lib/x86_64-linux-gnu/mesa-egl:$LD_LIBRARY_PATH\"\nexport LD_LIBRARY_PATH=\"$SNAP/usr/lib/x86_64-linux-gnu:$SNAP/usr/lib/x86_64-linux-gnu/pulseaudio:$LD_LIBRARY_PATH\"\nexport LD_LIBRARY_PATH=$SNAP_LIBRARY_PATH:$LD_LIBRARY_PATH\nexec \"desktop-launch\" \"$SNAP/${packager.executableName}\" \"$@\"\n`, {mode: \"0755\"})\n\n      await copyDir(await getSnapTemplate(), stageDir.dir, {\n        isUseHardLink: USE_HARD_LINKS,\n      })\n      await copyDirUsingHardLinks(appOutDir, stageDir.dir)\n    }\n\n    if (isUseDocker) {\n      if (this.isUsePrepackedSnap) {\n        await this.buildUsingDockerAndPrepackedSnap(snapFileName, stageDir)\n      }\n      else {\n        await this.buildUsingDocker(options, arch, snapFileName, stageDir, appOutDir)\n      }\n    }\n    else {\n      await this.buildWithoutDocker(buildPackages, stageDir.dir, arch, artifactPath)\n    }\n\n    await stageDir.cleanup()\n    packager.dispatchArtifactCreated(artifactPath, this, arch)\n  }\n\n  private async buildWithoutDocker(buildPackages: Array<string>, stageDir: string, arch: Arch, artifactPath: string) {\n    if (buildPackages.length > 0) {\n      const notInstalledPackages = await BluebirdPromise.filter(buildPackages, (it): Promise<boolean> => {\n        return exec(\"dpkg\", [\"-s\", it])\n          .then(result => result.includes(\"is not installed\"))\n      })\n      if (notInstalledPackages.length > 0) {\n        await spawn(\"apt-get\", [\"-qq\", \"update\"])\n        await spawn(\"apt-get\", [\"-qq\", \"install\", \"--no-install-recommends\"].concat(notInstalledPackages))\n      }\n    }\n    const spawnOptions = {\n      cwd: stageDir,\n      stdio: [\"ignore\", \"inherit\", \"inherit\"],\n    }\n\n    let primeDir: string\n    if (this.isUsePrepackedSnap) {\n      primeDir = stageDir\n    }\n    else {\n      await spawn(\"snapcraft\", [\"prime\", \"--target-arch\", toLinuxArchString(arch)], spawnOptions)\n      primeDir = stageDir + path.sep + \"prime\"\n      await exec(\"/bin/bash\", [\"-c\", `rm -rf ${unnecessaryFiles.join(\" \")}`], {\n        cwd: primeDir,\n      })\n    }\n    await spawn(\"snapcraft\", [\"pack\", primeDir, \"--output\", artifactPath], spawnOptions)\n  }\n\n  private async buildUsingDockerAndPrepackedSnap(snapFileName: string, stageDir: StageDir) {\n    await spawn(\"docker\", [\"run\", \"--rm\",\n      // dist dir can be outside of project dir\n      \"-v\", `${this.outDir}:/out`,\n      \"-v\", `${stageDir.dir}:/stage:ro`,\n      \"electronuserland/builder:latest\",\n      \"/bin/bash\", \"-c\", `snapcraft pack /stage --output /out/${snapFileName}`,\n    ], {\n      cwd: this.packager.info.projectDir,\n      stdio: [\"ignore\", \"inherit\", \"inherit\"],\n    })\n  }\n\n  private async buildUsingDocker(options: SnapOptions, arch: Arch, snapFileName: string, stageDir: StageDir, appOutDir: string) {\n    const commands: Array<string> = []\n    if (options.buildPackages != null && options.buildPackages.length > 0) {\n      commands.push(`apt-get install --no-install-recommends -y ${options.buildPackages.join(\" \")}`)\n    }\n\n    // copy stage to linux fs to avoid performance issues (https://docs.docker.com/docker-for-mac/osxfs-caching/)\n    commands.push(\"cp -R /stage /s/\")\n    commands.push(\"cd /s\")\n    commands.push(`snapcraft prime --target-arch ${toLinuxArchString(arch)}`)\n    commands.push(`rm -rf ${unnecessaryFiles.map(it => `prime/${it}`).join(\" \")}`)\n    commands.push(`snapcraft pack /s/prime --output /out/${snapFileName}`)\n\n    await spawn(\"docker\", [\"run\", \"--rm\",\n      \"-v\", `${this.packager.info.projectDir}:/project:delegated`,\n      // dist dir can be outside of project dir\n      \"-v\", `${this.outDir}:/out`,\n      \"-v\", `${stageDir.dir}:/stage:ro`,\n      \"-v\", `${appOutDir}:/appOutDir:ro`,\n      \"electronuserland/builder:latest\",\n      \"/bin/bash\", \"-c\", commands.join(\" && \"),\n    ], {\n      cwd: this.packager.info.projectDir,\n      stdio: [\"ignore\", \"inherit\", \"inherit\"],\n    })\n  }\n}"]}
