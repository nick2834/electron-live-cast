"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.fpmPath = undefined;
exports.getLinuxToolsPath = getLinuxToolsPath;
exports.getAppImage = getAppImage;
exports.prefetchBuildTools = prefetchBuildTools;
exports.getZstd = getZstd;
exports.getAria = getAria;
exports.getSnapTemplate = getSnapTemplate;
exports.getTool = getTool;
exports.getAppBuilderTool = getAppBuilderTool;

var _builderUtil;

function _load_builderUtil() {
    return _builderUtil = require("builder-util");
}

var _binDownload;

function _load_binDownload() {
    return _binDownload = require("builder-util/out/binDownload");
}

var _lazyVal;

function _load_lazyVal() {
    return _lazyVal = require("lazy-val");
}

var _path = _interopRequireWildcard(require("path"));

var _core;

function _load_core() {
    return _core = require("../core");
}

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function getLinuxToolsPath() {
    //noinspection SpellCheckingInspection
    return (0, (_binDownload || _load_binDownload()).getBinFromGithub)("linux-tools", "mac-10.12.3", "SQ8fqIRVXuQVWnVgaMTDWyf2TLAJjJYw3tRSqQJECmgF6qdM7Kogfa6KD49RbGzzMYIFca9Uw3MdsxzOPRWcYw==");
}
function getAppImage() {
    //noinspection SpellCheckingInspection
    return (0, (_binDownload || _load_binDownload()).getBinFromGithub)("appimage", "9.0.5", "AZbiBSeyow/pKCzeyIwVtogIUSWD4GxAxkqwL9GQcL1vq+EhcNPeMKOdlSI045SU4pknU4ceLwO5tzV7o0tNOw==");
}
const fpmPath = exports.fpmPath = new (_lazyVal || _load_lazyVal()).Lazy(() => {
    if (process.platform === "win32" || process.env.USE_SYSTEM_FPM === "true") {
        return Promise.resolve("fpm");
    }
    const osAndArch = process.platform === "darwin" ? "mac" : `linux-x86${process.arch === "ia32" ? "" : "_64"}`;
    if (process.platform === "darwin") {
        //noinspection SpellCheckingInspection
        return (0, (_binDownload || _load_binDownload()).getBinFromGithub)("fpm", "1.9.3-20150715-2.2.2-mac", "oXfq+0H2SbdrbMik07mYloAZ8uHrmf6IJk+Q3P1kwywuZnKTXSaaeZUJNlWoVpRDWNu537YxxpBQWuTcF+6xfw==").then(it => _path.join(it, "fpm"));
    }
    //noinspection SpellCheckingInspection
    const checksum = process.arch === "ia32" ? "OnzvBdsHE5djcXcAT87rwbnZwS789ZAd2ehuIO42JWtBAHNzXKxV4o/24XFX5No4DJWGO2YSGQttW+zn7d/4rQ==" : "fcKdXPJSso3xFs5JyIJHG1TfHIRTGDP0xhSBGZl7pPZlz4/TJ4rD/q3wtO/uaBBYeX0qFFQAFjgu1uJ6HLHghA==";
    return (0, (_binDownload || _load_binDownload()).getBinFromGithub)("fpm", `1.9.3-2.3.1-${osAndArch}`, checksum).then(it => _path.join(it, "fpm"));
});
// noinspection JSUnusedGlobalSymbols
function prefetchBuildTools() {
    // yes, we starting to use native Promise
    return Promise.all([getAppImage(), fpmPath.value, getAppBuilderTool(), getSnapTemplate()]);
}
function getZstd() {
    // noinspection SpellCheckingInspection
    return getTool({
        name: "zstd",
        version: "1.3.3",
        mac: "RnFYU+gEieQFCu943WEmh++PT5TZjDSqSCZvZj7ArfVkc+JS+DdGi30/466gqx9VFKsk6XpYrCpZNryFSvDOuw==",
        "linux-x64": "M1YpBtWX9C99hwRHF8bOLdN5bUFChMwWRc/NzGSwG48VVtegEV2RCFqbT1v0ZcSLC54muhOtK1VgMEmTKr0ouQ==",
        "win-ia32": "uUG8l+JQZtgFOq5G9lg3ryABiFA2gv14inJTAmpprywmbVfCVe++ikzJcjg5ZdLKhYDcB3nIsKE5c7pWY7+1yA==",
        "win-x64": "lBCx8nuRkEu8oQqgXosuO9e35BQOSyugFaK5ExBiTKh6qkv6amsYEUNELZGmEqH+FXscagxq+7+QUYkWJfmROQ=="
    });
}
function getAria() {
    const platform = (_core || _load_core()).Platform.current();
    const archQualifier = platform === (_core || _load_core()).Platform.MAC ? "" : `-${process.arch}`;
    let checksum = "";
    if (platform === (_core || _load_core()).Platform.MAC) {
        // noinspection SpellCheckingInspection
        checksum = "UjstpQUAtoP/sZ9SNuWwIN1WyDfvr1V3bzLGzTZCt1IqQsf9YwBSo0jrXMMRZOqv1sy5EOvp5nyC4VvJZCRVuQ==";
    } else if (platform === (_core || _load_core()).Platform.WINDOWS) {
        // noinspection SpellCheckingInspection
        checksum = process.arch === "ia32" ? "aulZig14OCHqj5qUWDvIAacibzW9k+gfDGDeECzWDrF7FPYzI+Vn7Q7QnW/FXNyNnbe8PeYawTlGzD3vJxLQWg==" : "zksKH0Uazwtc/vfGSVy+tzsNou+thSamAGTKt8P1DLoNkdSz9ueaIFoJ7jt8jlDds8Z6Rrxls6IFkZRBDxiyfg==";
    }
    //noinspection SpellCheckingInspection
    return (0, (_binDownload || _load_binDownload()).getBinFromGithub)(`aria2-${platform.buildConfigurationKey}${archQualifier}`, "1.33.1", checksum).then(it => _path.join(it, `aria2c${platform === (_core || _load_core()).Platform.WINDOWS ? ".exe" : ""}`));
}
function getSnapTemplate() {
    // noinspection SpellCheckingInspection
    return (0, (_binDownload || _load_binDownload()).getBinFromGithub)("snap-template", "0.1.1", "W8JXQMwsrqH7T8kFD3KuULNVJRqygmcQPDPGhr9BXeRQS9U+A6jSsUEopQIwfQxlhuA6f7Jerc9XA0/ZLlK60w==");
}
function getTool(descriptor) {
    let arch = process.arch;
    if (arch === "arm") {
        arch = "armv7";
    } else if (arch === "arm64") {
        arch = "armv8";
    }
    const platform = (_core || _load_core()).Platform.current();
    const checksum = platform === (_core || _load_core()).Platform.MAC ? descriptor.mac : descriptor[`${platform.buildConfigurationKey}-${arch}`];
    if (checksum == null) {
        throw new Error(`Checksum not specified for ${platform}:${arch}`);
    }
    const archQualifier = platform === (_core || _load_core()).Platform.MAC ? "" : `-${arch}`;
    // https://github.com/develar/block-map-builder/releases/download/v0.0.1/block-map-builder-v0.0.1-win-x64.7z
    const version = descriptor.version;
    const name = descriptor.name;
    const repository = descriptor.repository || "electron-userland/electron-builder-binaries";
    const tagPrefix = descriptor.repository == null ? `${name}-` : "v";
    return (0, (_binDownload || _load_binDownload()).getBin)(name, `${name}-v${version}-${process.arch}`, `https://github.com/${repository}/releases/download/${tagPrefix}${version}/${name}-v${version}-${platform.buildConfigurationKey}${archQualifier}.7z`, checksum).then(it => _path.join(it, `${name}${platform === (_core || _load_core()).Platform.WINDOWS ? ".exe" : ""}`));
}
function getAppBuilderTool() {
    if ((0, (_builderUtil || _load_builderUtil()).isEnvTrue)(process.env.USE_SYSTEM_AB)) {
        return Promise.resolve("app-builder");
    }
    // noinspection SpellCheckingInspection
    return getTool({
        repository: "develar/app-builder",
        name: "app-builder",
        version: "0.6.1",
        "linux-armv7": "oDOrB1Cv65OkNF1+bLTpw50xG+C1p6wjbWEwYGR+WbQs6ScrqcN7bPbHrSW1t578d5Y+x/sU5PYrfpBJTE9I2w==",
        "linux-armv8": "f10m8QnQr7V2bf1rZnun+uGc1piZjYLZx2OWKyNwsL+IRpT0VCnTUpuL0TV4UJbw1QzPg/JdzGAKubRfuXaWMw==",
        "linux-ia32": "qb14V2GfUIZ64ytrJemW0tgcvyrOPzWfWJQ8SJ6O+MmXC+zNGFBR2FYxfTzGOeB9iaXZucdAImxBxCrqUwZgew==",
        "linux-x64": "xPYAnXx535ZSMktNwbvsV4U1BadXaad0LtVtQBoFJuuRUQFqyOImK5XBvnhRhac7Ufx1S1jLoVfTMocPWvKutw==",
        mac: "ONEM+jbw48kBkqFXkxHQiEXEjLtm0TWVqDEjw7X4SX5GKtejfAGus9efMBcghG9O2ooRqcj5PGtbpV65LQs5ug==",
        "win-ia32": "XHQRnsLhuu+O20wf24bKWHT4I8sXT5e16970guutZjqcAC07O6/wQk527R6DBSoGHe+71neUK/oYK6B23glrAw==",
        "win-x64": "m1kR07Nz0fHvwPHcfYnJvd8puQfh71qbLoySXJHNS88xyEZNKMJXOTlwjUbv2D05LpzrhgIbBZFH5GOedlCQpA=="
    });
}
//# sourceMappingURL=tools.js.map